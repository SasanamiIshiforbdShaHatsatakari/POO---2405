  //POO - programação - Orientadas a Objetos - simular coisas da realidade na programação
    //
    //Objetos - possui Estados(nome, idade, endereço, altura e etc), comportamento(andar, correr, dormir, comer etc)
    //a POO é dividida em:
    //
    //classes - São modelos que servem para a construção de objs derivados dele mesmo(Ex Classe pessoa)
    //asclasses recebem atributos(os estados)
    //
    //Métodos - será as instâncias da classe, as formas de agir
     //Estrutura de uma classe
     // class Nome(){ocorridos de um objeto}
     /*
     val ricardo = Pessoa()//instanciando um objetoprintln
     ricardo.nome = "Ricardo Algustim de Oliva"
    ricardo.altura = 2.15
    ricardo.corDosOlhos = "verde"
    ricardo.peso = 100.0
    println(ricardo.altura)//para exibir um atributo em específico
    */
    val convidado1 = Pessoa("Carlão", 1.79, "castanho", 183.0)
    println(convidado1.nome)
    val convidado2 = Pessoa("vina", 1.5, "azul", 53.5)
    println(convidado2.nome)
    
    val convidado3 = Pessoa("Kauã", 1.4, "verde", 200.0)
    println(convidado3.nome)
    val convidado4 = Pessoa("Rogerão", 1.58, "castanho", 83.0)
    println(convidado4.nome)
    val convidado5 = Pessoa("Safirá", 1.87, "esmeralda", 94.1)
    println(convidado5.nome)
      val convidado6 = Pessoa("ben", 1.5, "azul", 66.6)
    println(convidado6.nome)
    
    //Exercício: Criem um churros e exiba a lista de convidados no console, no min 6 pessoas
}
class Pessoa(val nome: String, val altura:Double, val corDosOlhos: String, val peso: Double){
    //declarando atributos para a classe
    /*
    var nome =""
    var altura = 0.0
    var corDosOlhos = ""
    var peso = 0.0
    */
}

  /* var dinossauro = Animal("Titanossauro", 'M' , "Região noroeste paulista" , "Herbivoro" , 140000000 , false)
    println("meu dino é um " + dinossauro.especie + " ele é " + dinossauro.dieta + " e ele viveu á " + dinossauro.idade)
    dinossauro.Atacar(true)
    dinossauro.passivo(false)
    dinossauro.estaminaZero(false)
}
class Animal(val especie: String, val genero: Char, val habitat: String,
            val dieta: String, val idade: Int, val voa: Boolean){
    fun Atacar(bravo: Boolean){
        
        if(bravo == true){
              println("Titanossauro...ataque!!! \n")
        }else{
            println("Titanossauro está de boa, suavao, moh paizse \n")
        }
        
    }
     fun passivo(atacado: Boolean){
            if(atacado == true){
                println("Titanossauro...Corre \n")
            }else{
               println("Titanossauro está na passiva \n")
            }   
     }                   
     fun estaminaZero(fugindo: Boolean){
            if(fugindo == true){
                println("Continua correndo Tita \n")
            }else{
               println("Adios my dino \n")
            }
        
     }
}*/
    //exercicio: Façâ um novo comportamento para o seu animal usando uma nova função 
   
    //Métodos - Comportamentos da nossa classe, que os nossos objetos receberão
    //eles são declarados usando funções
    
 val contaCorrente =  contaNoBanco(1997, 999999999.99, "Safra", "din dinou din" )
   
    class contaNoBanco(var senha: Int, var saldo :Double, var banco: String, var dono: String){
        
        fun consultarSaldo(){
            println("O saldo da sua conta é R$$saldo")
        }
        
    }
}

}

    //Métodos - Comportamentos da nossa classe, que os nossos objetos receberão
    //eles são declarados usando funções
*/
